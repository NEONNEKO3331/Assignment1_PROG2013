import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class OnlineBookStore extends JFrame {
    public OnlineBookStore() {
        initComponents();
    }

    private javax.swing.JLabel AuthorLB;
    private javax.swing.JTextField AuthorTF;
    private javax.swing.JButton Calculatecostbutton;
    private javax.swing.JButton Downloadbutton;
    private javax.swing.JButton Ebookbutton;
    private javax.swing.JLabel FileformatLB;
    private javax.swing.JTextField FileformatTF;
    private javax.swing.JLabel FunctionLB;
    private javax.swing.JButton Openbookbutton;
    private javax.swing.JButton Physicalbutton;
    private javax.swing.JLabel PriceLB;
    private javax.swing.JTextField PriceTF;
    private javax.swing.JLabel QuantityLB;
    private javax.swing.JTextField QuantityTF;
    private javax.swing.JLabel TitleLB;
    private javax.swing.JTextField TitleTF;
    private javax.swing.JButton Validateformatbutton;
    private javax.swing.JLabel WeightLB;
    private javax.swing.JTextField WeightTF;
    private javax.swing.JButton Weightbutton;
    private javax.swing.JLabel booktypeLB;
    private javax.swing.JLabel obLB;
    private String booktype;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        obLB = new javax.swing.JLabel();
        booktypeLB = new javax.swing.JLabel();
        Physicalbutton = new javax.swing.JButton();
        Ebookbutton = new javax.swing.JButton();
        TitleLB = new javax.swing.JLabel();
        AuthorLB = new javax.swing.JLabel();
        PriceLB = new javax.swing.JLabel();
        FileformatLB = new javax.swing.JLabel();
        WeightLB = new javax.swing.JLabel();
        QuantityLB = new javax.swing.JLabel();
        TitleTF = new javax.swing.JTextField();
        AuthorTF = new javax.swing.JTextField();
        FileformatTF = new javax.swing.JTextField();
        WeightTF = new javax.swing.JTextField();
        QuantityTF = new javax.swing.JTextField();
        PriceTF = new javax.swing.JTextField();
        FunctionLB = new javax.swing.JLabel();
        Calculatecostbutton = new javax.swing.JButton();
        Downloadbutton = new javax.swing.JButton();
        Openbookbutton = new javax.swing.JButton();
        Weightbutton = new javax.swing.JButton();
        Validateformatbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        obLB.setText("Online Bookstore");
        getContentPane().add(obLB);
        obLB.setBounds(253, 6, 100, 16);

        booktypeLB.setText("Please select book type");
        getContentPane().add(booktypeLB);
        booktypeLB.setBounds(30, 50, 140, 16);

        Physicalbutton.setText("Physical");
        getContentPane().add(Physicalbutton);
        Physicalbutton.setBounds(33, 114, 100, 23);
        Physicalbutton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {

                TitleTF.setEditable(true);
                AuthorTF.setEditable(true);
                PriceTF.setEditable(true);
                QuantityTF.setEditable(true);
                WeightTF.setEditable(true);
                FileformatTF.setEditable(false);

                Openbookbutton.setEnabled(false);
                Validateformatbutton.setEnabled(false);
                Downloadbutton.setEnabled(false);
                Calculatecostbutton.setEnabled(true);
                Weightbutton.setEnabled(true);

                booktype = "physical book";
                FileformatTF.setText(" ");

            }
        });

        Ebookbutton.setText("E-book");
        getContentPane().add(Ebookbutton);
        Ebookbutton.setBounds(33, 80, 100, 22);
        Ebookbutton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {

                TitleTF.setEditable(true);
                AuthorTF.setEditable(true);
                PriceTF.setEditable(true);
                QuantityTF.setEditable(true);
                WeightTF.setEditable(false);
                FileformatTF.setEditable(true);

                Openbookbutton.setEnabled(true);
                Validateformatbutton.setEnabled(true);
                Downloadbutton.setEnabled(true);
                Calculatecostbutton.setEnabled(false);
                Weightbutton.setEnabled(false);

                WeightTF.setText("0");
                FileformatTF.setText("");
                booktype = "ebook";
            }
        });

        TitleLB.setText("Title");
        getContentPane().add(TitleLB);
        TitleLB.setBounds(45, 173, 60, 16);

        AuthorLB.setText("Author");
        getContentPane().add(AuthorLB);
        AuthorLB.setBounds(45, 223, 60, 16);

        PriceLB.setText("Price(RM)");
        getContentPane().add(PriceLB);
        PriceLB.setBounds(45, 281, 60, 16);

        FileformatLB.setText("File Format");
        getContentPane().add(FileformatLB);
        FileformatLB.setBounds(284, 173, 70, 16);

        WeightLB.setText("Weight(g)");
        getContentPane().add(WeightLB);
        WeightLB.setBounds(284, 223, 60, 16);

        QuantityLB.setText("Quantity");
        getContentPane().add(QuantityLB);
        QuantityLB.setBounds(284, 281, 60, 16);

        TitleTF.setEditable(false);
        getContentPane().add(TitleTF);
        TitleTF.setBounds(111, 173, 155, 22);

        AuthorTF.setEditable(false);
        getContentPane().add(AuthorTF);
        AuthorTF.setBounds(111, 223, 155, 22);

        FileformatTF.setEditable(false);
        getContentPane().add(FileformatTF);
        FileformatTF.setBounds(362, 173, 256, 22);

        WeightTF.setEditable(false);
        getContentPane().add(WeightTF);
        WeightTF.setBounds(362, 223, 256, 22);

        QuantityTF.setEditable(false);
        getContentPane().add(QuantityTF);
        QuantityTF.setBounds(362, 281, 256, 22);

        PriceTF.setEditable(false);
        getContentPane().add(PriceTF);
        PriceTF.setBounds(111, 281, 155, 22);

        FunctionLB.setText("Function");
        getContentPane().add(FunctionLB);
        FunctionLB.setBounds(30, 350, 110, 16);

        Calculatecostbutton.setText("Calculate Cost");
        Calculatecostbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculatecostbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(Calculatecostbutton);
        Calculatecostbutton.setBounds(180, 380, 130, 22);

        Downloadbutton.setText("Download");
        getContentPane().add(Downloadbutton);
        Downloadbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownloadbuttonActionPerformed(evt);
            }
        });
        Downloadbutton.setBounds(30, 380, 120, 22);

        Openbookbutton.setText("Open Book");
        Openbookbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenbookbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(Openbookbutton);
        Openbookbutton.setBounds(30, 420, 120, 22);

        Weightbutton.setText("Weight");
        Weightbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeightbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(Weightbutton);
        Weightbutton.setBounds(180, 420, 130, 22);

        Validateformatbutton.setText("Validate Format");
        Validateformatbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidateformatbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(Validateformatbutton);
        Validateformatbutton.setBounds(30, 460, 120, 22);

        pack();
    }// </editor-fold>

    private void DownloadbuttonActionPerformed(java.awt.event.ActionEvent evt) {
        EBook eBook1 = EBookinfo();
        eBook1.downloadBook();
    }

    private void OpenbookbuttonActionPerformed(java.awt.event.ActionEvent evt) {
        EBook eBook1 = EBookinfo();
        eBook1.openBook();
    }

    private void ValidateformatbuttonActionPerformed(java.awt.event.ActionEvent evt) {
        EBook eBook1 = EBookinfo();
        eBook1.validateFormat();
        JOptionPane.showMessageDialog(null, eBook1.validateFormat(), "Action",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void WeightbuttonActionPerformed(java.awt.event.ActionEvent evt) {
        PhysicalBook physicalbook1 = physicalBookinfo();
        physicalbook1.getWeightInPounds();
        JOptionPane.showMessageDialog(null, "Pounds (lb): " + physicalbook1.getWeightInPounds(), "Action",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void CalculatecostbuttonActionPerformed(java.awt.event.ActionEvent evt) {
        PhysicalBook physicalbook1 = physicalBookinfo();
        physicalbook1.calculateShippingCost();
        JOptionPane.showMessageDialog(null, "Shipping Cost (RM): " + physicalbook1.calculateShippingCost(), "Action",
                JOptionPane.INFORMATION_MESSAGE);
    }

    EBook EBookinfo() {
        String author = AuthorTF.getText();
        String title = TitleTF.getText();
        double price = Double.parseDouble(PriceTF.getText());
        int quantity = Integer.parseInt(QuantityTF.getText());
        String fileformat = FileformatTF.getText();
        return new EBook(title, author, price, quantity, fileformat);
    }

    PhysicalBook physicalBookinfo() {
        String author = AuthorTF.getText();
        String title = TitleTF.getText();
        double price = Double.parseDouble(PriceTF.getText());
        int quantity = Integer.parseInt(QuantityTF.getText());
        int weight = Integer.parseInt(WeightTF.getText());
        return new PhysicalBook(title, author, price, quantity, weight);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame screen = new OnlineBookStore();
                screen.setVisible(true);
                screen.setSize(700, 600);
                screen.setTitle("Assignment 1");
            }
        });
    }

    // Variables declaration - do not modify

    // End of variables declaration
}
